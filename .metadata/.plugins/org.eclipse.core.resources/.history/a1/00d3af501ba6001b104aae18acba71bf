package br.edu.univas.main;

import java.util.Scanner;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Random;
import java.util.Scanner;
import br.edu.univas.vo.GeradorSenha;

public class StartApp {

	public static void main(String[] args) throws IOException {
		
		GeradorSenha geradorSenha = new GeradorSenha();
		
		cadastrarSenha(geradorSenha);
		gerarSenha(geradorSenha);
		
	}

	public static void cadastrarSenha(GeradorSenha geradorSenha) {
		
		for (int i = 0;; i++) {
			
			int options;
			boolean temMaiuscula = false;
			boolean temMinuscula = false;
			boolean temEspecial = false;
			boolean temNumeros = false;
			
			System.out.println("Digite o tamanho mínimo");
			geradorSenha.setMinSenha(lerInteiro());
			
			System.out.println("Digite o tamanho máximo");
			geradorSenha.setMaxSenha(lerInteiro());
			
			if(geradorSenha.getMaxSenha() < geradorSenha.getMinSenha()) {
				
				System.out.println("Deseja letras maiúsculas na senha ?" + "\n" + "1- True;" + "\n" + "2- False;");
				options = lerInteiro();
				
				if(options == 1 || options == 2) {
					if(options == 1) {
						temMaiuscula = true;
					}
				} else {
					boolean troca = false;
					System.out.println("Comando inválido!");
					while(troca == false) {
						System.out.println("Deseja letras maiúsculas na senha ?" + "\n" + "1- True;" + "\n" + "2- False;");
						options = lerInteiro();
						
						if(options == 1 || options == 2) {
							troca = true;
							if(options == 1) {
								temMaiuscula = true;
						}
					}
				}
				
				System.out.println("Deseja letras minúsculas na senha ?" + "\n" + "1- True;" + "\n" + "2- False;");
				options = lerInteiro();
				
				if(options == 1 || options == 2) {
					if(options == 1) {
						temMinuscula = true;
					}
				} else {
					System.out.println("Comando inválido!");
				}
				
				System.out.println("Deseja números na senha ?" + "\n" + "1- True;" + "\n" + "2- False;");
				options = lerInteiro();
				
				if(options == 1 || options == 2) {
					if(options == 1) {
						temNumeros = true;
					}
				} else {
					System.out.println("Comando inválido!");
				}
				
				System.out.println("Deseja caracteres especiais na senha ?" + "\n" + "1- True;" + "\n" + "2- False;");
				options = lerInteiro();
				
				if(options == 1 || options == 2) {
					if(options == 1) {
						temEspecial = true;
					}
				} else {
					System.out.println("Comando inválido!");
				}
				
			}
			
			else {
				
				System.out.println("Valor máximo e mínimo não compatíveis!");
				
			}
				
		
		}

	}

	public static void gerarSenha(GeradorSenha geradorSenha) {
		String senha = "";
		String concatenado = "";
		Random random = new Random();
		StringBuilder sb = new StringBuilder();

	

		/*
		 * for(int i = 0; geradorSenha.getMaxSenha() > i ;i++) { for(int j = i;
		 * geradorSenha.getMinSenha() < j; j++) { senhaA[i] =
		 * concatenaString.charAt(random.nextInt(geradorSenha.getMinSenha())); }
		 * "abcdefghijklmnopqrstuvwxyz"
		 * "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
		 * "123456789"
		 * "!@#$%&"
		 * }
		 */
		}
	
	public static int lerInteiro() {
		Scanner scanner = new Scanner(System.in);
		int value = scanner.nextInt();
		scanner.nextLine();
		return value;
	}
	
	public static boolean whileInválido(boolean variavel, int options) {
		boolean troca = false;
		while(troca == false) {
			System.out.println("Deseja letras maiúsculas na senha ?" + "\n" + "1- True;" + "\n" + "2- False;");
			options = lerInteiro();
			
			if(options == 1 || options == 2) {
				troca = true;
				
			}
		}
	}
	
	}
	
	
	

}